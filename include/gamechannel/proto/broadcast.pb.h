// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: gamechannel/proto/broadcast.proto

#ifndef GOOGLE_PROTOBUF_INCLUDED_gamechannel_2fproto_2fbroadcast_2eproto
#define GOOGLE_PROTOBUF_INCLUDED_gamechannel_2fproto_2fbroadcast_2eproto

#include <limits>
#include <string>

#include <google/protobuf/port_def.inc>
#if PROTOBUF_VERSION < 3021000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers. Please update
#error your headers.
#endif
#if 3021012 < PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers. Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/port_undef.inc>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata_lite.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
#include "gamechannel/proto/stateproof.pb.h"
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
#define PROTOBUF_INTERNAL_EXPORT_gamechannel_2fproto_2fbroadcast_2eproto
PROTOBUF_NAMESPACE_OPEN
namespace internal {
class AnyMetadata;
}  // namespace internal
PROTOBUF_NAMESPACE_CLOSE

// Internal implementation detail -- do not use these members.
struct TableStruct_gamechannel_2fproto_2fbroadcast_2eproto {
  static const uint32_t offsets[];
};
extern const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_gamechannel_2fproto_2fbroadcast_2eproto;
namespace xaya {
namespace proto {
class BroadcastMessage;
struct BroadcastMessageDefaultTypeInternal;
extern BroadcastMessageDefaultTypeInternal _BroadcastMessage_default_instance_;
}  // namespace proto
}  // namespace xaya
PROTOBUF_NAMESPACE_OPEN
template<> ::xaya::proto::BroadcastMessage* Arena::CreateMaybeMessage<::xaya::proto::BroadcastMessage>(Arena*);
PROTOBUF_NAMESPACE_CLOSE
namespace xaya {
namespace proto {

// ===================================================================

class BroadcastMessage final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:xaya.proto.BroadcastMessage) */ {
 public:
  inline BroadcastMessage() : BroadcastMessage(nullptr) {}
  ~BroadcastMessage() override;
  explicit PROTOBUF_CONSTEXPR BroadcastMessage(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  BroadcastMessage(const BroadcastMessage& from);
  BroadcastMessage(BroadcastMessage&& from) noexcept
    : BroadcastMessage() {
    *this = ::std::move(from);
  }

  inline BroadcastMessage& operator=(const BroadcastMessage& from) {
    CopyFrom(from);
    return *this;
  }
  inline BroadcastMessage& operator=(BroadcastMessage&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const BroadcastMessage& default_instance() {
    return *internal_default_instance();
  }
  static inline const BroadcastMessage* internal_default_instance() {
    return reinterpret_cast<const BroadcastMessage*>(
               &_BroadcastMessage_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  friend void swap(BroadcastMessage& a, BroadcastMessage& b) {
    a.Swap(&b);
  }
  inline void Swap(BroadcastMessage* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(BroadcastMessage* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  BroadcastMessage* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<BroadcastMessage>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const BroadcastMessage& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const BroadcastMessage& from) {
    BroadcastMessage::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(BroadcastMessage* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "xaya.proto.BroadcastMessage";
  }
  protected:
  explicit BroadcastMessage(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kReinitFieldNumber = 1,
    kProofFieldNumber = 2,
  };
  // optional bytes reinit = 1;
  bool has_reinit() const;
  private:
  bool _internal_has_reinit() const;
  public:
  void clear_reinit();
  const std::string& reinit() const;
  template <typename ArgT0 = const std::string&, typename... ArgT>
  void set_reinit(ArgT0&& arg0, ArgT... args);
  std::string* mutable_reinit();
  PROTOBUF_NODISCARD std::string* release_reinit();
  void set_allocated_reinit(std::string* reinit);
  private:
  const std::string& _internal_reinit() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_reinit(const std::string& value);
  std::string* _internal_mutable_reinit();
  public:

  // optional .xaya.proto.StateProof proof = 2;
  bool has_proof() const;
  private:
  bool _internal_has_proof() const;
  public:
  void clear_proof();
  const ::xaya::proto::StateProof& proof() const;
  PROTOBUF_NODISCARD ::xaya::proto::StateProof* release_proof();
  ::xaya::proto::StateProof* mutable_proof();
  void set_allocated_proof(::xaya::proto::StateProof* proof);
  private:
  const ::xaya::proto::StateProof& _internal_proof() const;
  ::xaya::proto::StateProof* _internal_mutable_proof();
  public:
  void unsafe_arena_set_allocated_proof(
      ::xaya::proto::StateProof* proof);
  ::xaya::proto::StateProof* unsafe_arena_release_proof();

  // @@protoc_insertion_point(class_scope:xaya.proto.BroadcastMessage)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr reinit_;
    ::xaya::proto::StateProof* proof_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_gamechannel_2fproto_2fbroadcast_2eproto;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// BroadcastMessage

// optional bytes reinit = 1;
inline bool BroadcastMessage::_internal_has_reinit() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool BroadcastMessage::has_reinit() const {
  return _internal_has_reinit();
}
inline void BroadcastMessage::clear_reinit() {
  _impl_.reinit_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const std::string& BroadcastMessage::reinit() const {
  // @@protoc_insertion_point(field_get:xaya.proto.BroadcastMessage.reinit)
  return _internal_reinit();
}
template <typename ArgT0, typename... ArgT>
inline PROTOBUF_ALWAYS_INLINE
void BroadcastMessage::set_reinit(ArgT0&& arg0, ArgT... args) {
 _impl_._has_bits_[0] |= 0x00000001u;
 _impl_.reinit_.SetBytes(static_cast<ArgT0 &&>(arg0), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:xaya.proto.BroadcastMessage.reinit)
}
inline std::string* BroadcastMessage::mutable_reinit() {
  std::string* _s = _internal_mutable_reinit();
  // @@protoc_insertion_point(field_mutable:xaya.proto.BroadcastMessage.reinit)
  return _s;
}
inline const std::string& BroadcastMessage::_internal_reinit() const {
  return _impl_.reinit_.Get();
}
inline void BroadcastMessage::_internal_set_reinit(const std::string& value) {
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.reinit_.Set(value, GetArenaForAllocation());
}
inline std::string* BroadcastMessage::_internal_mutable_reinit() {
  _impl_._has_bits_[0] |= 0x00000001u;
  return _impl_.reinit_.Mutable(GetArenaForAllocation());
}
inline std::string* BroadcastMessage::release_reinit() {
  // @@protoc_insertion_point(field_release:xaya.proto.BroadcastMessage.reinit)
  if (!_internal_has_reinit()) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000001u;
  auto* p = _impl_.reinit_.Release();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (_impl_.reinit_.IsDefault()) {
    _impl_.reinit_.Set("", GetArenaForAllocation());
  }
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  return p;
}
inline void BroadcastMessage::set_allocated_reinit(std::string* reinit) {
  if (reinit != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  _impl_.reinit_.SetAllocated(reinit, GetArenaForAllocation());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (_impl_.reinit_.IsDefault()) {
    _impl_.reinit_.Set("", GetArenaForAllocation());
  }
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:xaya.proto.BroadcastMessage.reinit)
}

// optional .xaya.proto.StateProof proof = 2;
inline bool BroadcastMessage::_internal_has_proof() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.proof_ != nullptr);
  return value;
}
inline bool BroadcastMessage::has_proof() const {
  return _internal_has_proof();
}
inline const ::xaya::proto::StateProof& BroadcastMessage::_internal_proof() const {
  const ::xaya::proto::StateProof* p = _impl_.proof_;
  return p != nullptr ? *p : reinterpret_cast<const ::xaya::proto::StateProof&>(
      ::xaya::proto::_StateProof_default_instance_);
}
inline const ::xaya::proto::StateProof& BroadcastMessage::proof() const {
  // @@protoc_insertion_point(field_get:xaya.proto.BroadcastMessage.proof)
  return _internal_proof();
}
inline void BroadcastMessage::unsafe_arena_set_allocated_proof(
    ::xaya::proto::StateProof* proof) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.proof_);
  }
  _impl_.proof_ = proof;
  if (proof) {
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:xaya.proto.BroadcastMessage.proof)
}
inline ::xaya::proto::StateProof* BroadcastMessage::release_proof() {
  _impl_._has_bits_[0] &= ~0x00000002u;
  ::xaya::proto::StateProof* temp = _impl_.proof_;
  _impl_.proof_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::xaya::proto::StateProof* BroadcastMessage::unsafe_arena_release_proof() {
  // @@protoc_insertion_point(field_release:xaya.proto.BroadcastMessage.proof)
  _impl_._has_bits_[0] &= ~0x00000002u;
  ::xaya::proto::StateProof* temp = _impl_.proof_;
  _impl_.proof_ = nullptr;
  return temp;
}
inline ::xaya::proto::StateProof* BroadcastMessage::_internal_mutable_proof() {
  _impl_._has_bits_[0] |= 0x00000002u;
  if (_impl_.proof_ == nullptr) {
    auto* p = CreateMaybeMessage<::xaya::proto::StateProof>(GetArenaForAllocation());
    _impl_.proof_ = p;
  }
  return _impl_.proof_;
}
inline ::xaya::proto::StateProof* BroadcastMessage::mutable_proof() {
  ::xaya::proto::StateProof* _msg = _internal_mutable_proof();
  // @@protoc_insertion_point(field_mutable:xaya.proto.BroadcastMessage.proof)
  return _msg;
}
inline void BroadcastMessage::set_allocated_proof(::xaya::proto::StateProof* proof) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.proof_);
  }
  if (proof) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(
                reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(proof));
    if (message_arena != submessage_arena) {
      proof = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, proof, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }
  _impl_.proof_ = proof;
  // @@protoc_insertion_point(field_set_allocated:xaya.proto.BroadcastMessage.proof)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)

}  // namespace proto
}  // namespace xaya

// @@protoc_insertion_point(global_scope)

#include <google/protobuf/port_undef.inc>
#endif  // GOOGLE_PROTOBUF_INCLUDED_GOOGLE_PROTOBUF_INCLUDED_gamechannel_2fproto_2fbroadcast_2eproto
