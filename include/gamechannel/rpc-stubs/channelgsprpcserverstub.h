/**
 * This file is generated by jsonrpcstub, DO NOT CHANGE IT MANUALLY!
 */

#ifndef JSONRPC_CPP_STUB_CHANNELGSPRPCSERVERSTUB_H_
#define JSONRPC_CPP_STUB_CHANNELGSPRPCSERVERSTUB_H_

#include <jsonrpccpp/server.h>

class ChannelGspRpcServerStub : public jsonrpc::AbstractServer<ChannelGspRpcServerStub>
{
    public:
        ChannelGspRpcServerStub(jsonrpc::AbstractServerConnector &conn, jsonrpc::serverVersion_t type = jsonrpc::JSONRPC_SERVER_V2) : jsonrpc::AbstractServer<ChannelGspRpcServerStub>(conn, type)
        {
            this->bindAndAddNotification(jsonrpc::Procedure("stop", jsonrpc::PARAMS_BY_NAME,  NULL), &ChannelGspRpcServerStub::stopI);
            this->bindAndAddMethod(jsonrpc::Procedure("getcurrentstate", jsonrpc::PARAMS_BY_NAME, jsonrpc::JSON_OBJECT,  NULL), &ChannelGspRpcServerStub::getcurrentstateI);
            this->bindAndAddMethod(jsonrpc::Procedure("getnullstate", jsonrpc::PARAMS_BY_NAME, jsonrpc::JSON_OBJECT,  NULL), &ChannelGspRpcServerStub::getnullstateI);
            this->bindAndAddMethod(jsonrpc::Procedure("getpendingstate", jsonrpc::PARAMS_BY_NAME, jsonrpc::JSON_OBJECT,  NULL), &ChannelGspRpcServerStub::getpendingstateI);
            this->bindAndAddMethod(jsonrpc::Procedure("getchannel", jsonrpc::PARAMS_BY_POSITION, jsonrpc::JSON_OBJECT, "param1",jsonrpc::JSON_STRING, NULL), &ChannelGspRpcServerStub::getchannelI);
            this->bindAndAddMethod(jsonrpc::Procedure("waitforchange", jsonrpc::PARAMS_BY_POSITION, jsonrpc::JSON_STRING, "param1",jsonrpc::JSON_STRING, NULL), &ChannelGspRpcServerStub::waitforchangeI);
            this->bindAndAddMethod(jsonrpc::Procedure("waitforpendingchange", jsonrpc::PARAMS_BY_POSITION, jsonrpc::JSON_OBJECT, "param1",jsonrpc::JSON_INTEGER, NULL), &ChannelGspRpcServerStub::waitforpendingchangeI);
        }

        inline virtual void stopI(const Json::Value &request)
        {
            (void)request;
            this->stop();
        }
        inline virtual void getcurrentstateI(const Json::Value &request, Json::Value &response)
        {
            (void)request;
            response = this->getcurrentstate();
        }
        inline virtual void getnullstateI(const Json::Value &request, Json::Value &response)
        {
            (void)request;
            response = this->getnullstate();
        }
        inline virtual void getpendingstateI(const Json::Value &request, Json::Value &response)
        {
            (void)request;
            response = this->getpendingstate();
        }
        inline virtual void getchannelI(const Json::Value &request, Json::Value &response)
        {
            response = this->getchannel(request[0u].asString());
        }
        inline virtual void waitforchangeI(const Json::Value &request, Json::Value &response)
        {
            response = this->waitforchange(request[0u].asString());
        }
        inline virtual void waitforpendingchangeI(const Json::Value &request, Json::Value &response)
        {
            response = this->waitforpendingchange(request[0u].asInt());
        }
        virtual void stop() = 0;
        virtual Json::Value getcurrentstate() = 0;
        virtual Json::Value getnullstate() = 0;
        virtual Json::Value getpendingstate() = 0;
        virtual Json::Value getchannel(const std::string& param1) = 0;
        virtual std::string waitforchange(const std::string& param1) = 0;
        virtual Json::Value waitforpendingchange(int param1) = 0;
};

#endif //JSONRPC_CPP_STUB_CHANNELGSPRPCSERVERSTUB_H_
